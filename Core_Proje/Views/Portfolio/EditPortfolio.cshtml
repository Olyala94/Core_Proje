@model EntityLayer.Concrete.Portfolio
@{
    ViewData["Title"] = "EditPortfolio";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="card-header bg-transparent border-0">
    <h3 class="text-dark mb-0">Proje Düzenleme Sayfası</h3>
</div>
@using (Html.BeginForm("EditPortfolio", "Portfolio", FormMethod.Post))
{
    @Html.HiddenFor(x=>x.PortfolioID)
    <br />
    @Html.Label("Proje Başlığı")
    <br />
    @Html.TextBoxFor(x=>x.Name, new { @class = "form-control" })
    @Html.ValidationMessageFor(x=>x.Name)
    <br />
    <lable> Görsel 1 </lable>
    @Html.TextBoxFor(x=>x.ImageUrl, new { @class = "form-control" })
    @Html.ValidationMessageFor(x=>x.ImageUrl)
    <br />
    <lable> Görsel 2 </lable>
    @Html.TextBoxFor(x=>x.ImageUrl2, new { @class = "form-control" })
    @Html.ValidationMessageFor(x=>x.ImageUrl2)
    <br />
    <lable> Proje URL </lable>
    @Html.TextBoxFor(x=>x.ProjectUrl, new { @class = "form-control" })
    @Html.ValidationMessageFor(x=>x.ProjectUrl)
    <br />
    <lable> Fiyat </lable>
    @Html.TextBoxFor(x=>x.Price, new { @class = "form-control" })
    @Html.ValidationMessageFor(x=>x.Price)
    <br />
    <lable> Tamamlanma Oranı </lable>
    @Html.TextAreaFor(x=>x.Value, new { @class = "form-control" })
    @Html.ValidationMessageFor(x=>x.Value)
    <br />
        <lable> Platform </lable>
    @Html.TextAreaFor(x=>x.Platform, new { @class = "form-control" })
    @Html.ValidationMessageFor(x=>x.Platform)
    <br />
    <button class="btn btn-outline-success"> Güncelle </button>
}


